// Generated by CoffeeScript 1.4.0
(function() {
  var Backbone, Select, SubscriptionMixin, Validator, v;

  Backbone = require('backbone4000');

  Validator = require('validator2-extras');

  v = Validator.v;

  Select = Validator.Select;

  SubscriptionMixin = exports.SubscriptionMixin = Validator.ValidatedModel.extend4000({
    superValidator: v({
      create: 'function',
      update: 'function',
      remove: 'function'
    }),
    validator: v({
      lweb: "Instance"
    }),
    initialize: function() {
      return this.lweb = this.get('lweb');
    },
    create: function(entry, callback) {
      var _this = this;
      return this._super('create', entry, function(err, id) {});
    },
    update: function(pattern, update, callback) {
      this._super('update', pattern, update, callback);
      if (pattern.id) {
        return this.lweb.broadcast(pattern.id, {
          action: 'update',
          update: update
        });
      }
    },
    remove: function(pattern, callback) {
      this._super('remove', pattern, callback);
      if (pattern.id) {
        return this.lweb.broadcast(pattern.id({
          action: 'remove',
          id: pattern.id
        }));
      }
    },
    subscribeModel: function(id, callback) {
      return this.get('lweb').channel(id).subscribe(true, function(msg) {
        return callback(msg);
      });
    },
    unsubscribeModel: function() {
      return true;
    }
  });

}).call(this);
