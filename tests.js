// Generated by CoffeeScript 1.4.0
(function() {
  var lwebc, lwebs, shared;

  lwebs = require('./serverside');

  lwebc = require('./clientside');

  shared = require('./shared');

  exports.basic = function(test) {
    test.done();
    return;
    lwebs = lwebs.listen();
    lwebc = lwebc.connect();
    lwebc.channels.on('channel1', function(msg) {
      return console.log('channel msg', msg);
    });
    lwebs.channels.broadcast('channel1', {
      message: 'test message1'
    });
    lwebs.on({
      bla: true
    }, function(msg, response, client) {
      response.send({
        response: 1
      });
      return response.end({
        response: 2
      });
    });
    lwebc.query({
      bla: 3
    }, function(err, msg) {
      return console.log('got', msg);
    });
    return lwebc.multiQuery({
      bla: 3
    }, function(err, data) {
      return true;
    });
  };

  exports.SimpleSubscriptionMan = function(test) {
    var a;
    a = new shared.SubscriptionMan();
    a.subscribe({
      bla: true
    }, function(msg) {
      return test.done();
    });
    return a.event({
      bla: 'test1'
    });
  };

  exports.SimpleSubscriptionMan_fail = function(test) {
    var a;
    a = new shared.SubscriptionMan();
    a.subscribe({
      bla: 'testx'
    }, function(msg) {
      return test.fail();
    });
    a.event({
      bla: 'test1'
    });
    return test.done();
  };

  exports.SimpleSubscriptionMan_exact = function(test) {
    var a;
    a = new shared.SubscriptionMan();
    a.subscribe({
      bla: 'test1'
    }, function(msg) {
      return test.done();
    });
    return a.event({
      bla: 'test1'
    });
  };

}).call(this);
